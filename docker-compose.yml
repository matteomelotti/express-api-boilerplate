version: "3"
services:
  express-api:
    container_name: express_auth_api
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
      args:
        - APP_PORT=3000  
    command: ["npm", "run", "dev"]
    volumes:
      - .:/app
      - ./logs:/tmp/logs
      - express_auth_node_modules:/app/node_modules
    ports:
      - "${SERVER_PORT}:3000"
    env_file:
      - .env
    networks:
      - express_public_network
      - express_auth_db_network
      - express_auth_redis_network
    depends_on:
      express-redis:
        condition: service_healthy
      express-postgres:
        condition: service_healthy    

  express-redis:
    container_name: express_auth_redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    image: "redis:alpine"
    ports:
      - 6380:6379
    env_file:
      - .env
    volumes:
      - express_auth_redis:/data
    networks:
      - express_auth_redis_network

    
  express-postgres:
    container_name: express_auth_postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${AUTH_SERVICE_DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 120s
      start_period: 20s
      retries: 10
    image: postgres:15.1-alpine
    volumes:
      - express_auth_postgres:/var/lib/postgresql/data
    ports:
      - 5442:5432
    environment:
      - PGUSER=${AUTH_SERVICE_DB_USERNAME:-postgres}
      - POSTGRES_USERNAME=${AUTH_SERVICE_DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${AUTH_SERVICE_DB_PASSWORD:-password}
    networks:
      - express_auth_db_network
    
  

volumes:
  express_auth_postgres:
    external: true
  express_auth_redis:
    external: true
  express_auth_node_modules:
    external: true
networks:
  express_auth_db_network:
    external: true
  express_public_network:
    external: true
  express_auth_redis_network:
    external: true  
