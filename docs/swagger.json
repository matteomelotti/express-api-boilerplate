{
  "openapi": "3.0.3",
  "info": {
    "title": "Auth Service",
    "description": "This is the Auth service",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/auth/me": {
      "get": {
        "tags": ["User"],
        "summary": "Check JWT token is valid",
        "description": "Check JWT token is valid",
        "operationId": "me",
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": true,
                    "email": "user@example.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user/delete-me": {
      "post": {
        "tags": ["User"],
        "summary": "Delete User and federatedCredentials",
        "description": "Delete User and federatedCredentials",
        "operationId": "deleteMe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          },
          "422": {
            "description": "Unauthorized response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "errors": {
                          "type": "string",
                          "example": "User not deleted."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "errors": {
                          "type": "string",
                          "example": "User and federatedCredentials not deleted."
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
    },
    "responses": {
      "MeSuccess": {
        "description": "Success response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "userExternalCode": {
                  "type": "string",
                  "format": "uuid",
                  "example": "431c741e-2e1c-4dbe-8164-ec49e4e05e75"
                }
              }
            }
          }
        }
      },
      "UserNotFound": {
        "description": "Unauthorized response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "errors": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "email", "password"],
        "properties": {
          "id": {
            "description": "The unique identifier for my object. (A UUID specified by RFC4122).",
            "type": "string",
            "format": "uuid",
            "nullable": false
          },
          "email": {
            "description": "email",
            "type": "string",
            "nullable": false
          },
          "password": {
            "description": "password",
            "type": "string",
            "nullable": false
          },
          "passwordResetToken": {
            "description": "passwordResetToken",
            "type": "string"
          },
          "passwordResetTokenExpiresAt": {
            "description": "passwordResetTokenExpiresAt",
            "type": "string",
            "format": "date"
          },
          "activationToken": {
            "description": "activationToken",
            "type": "string"
          },
          "activationTokenExpiresAt": {
            "description": "activationTokenExpiresAt",
            "type": "string",
            "format": "date"
          },
          "temporaryEmail": {
            "description": "temporaryEmail",
            "type": "string"
          },
          "temporaryEmailToken": {
            "description": "temporaryEmailToken",
            "type": "string"
          },
          "temporaryEmailTokenExpiresAt": {
            "description": "temporaryEmailTokenExpiresAt",
            "type": "string",
            "format": "date"
          },
          "externalCode": {
            "description": "externalCode",
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Insert JWT token here"
      }
    }
  }
}
